;1 byte immediates
add al, 0xAB
adc al, 0xAB
and al, 0xAB
xor al, 0xAB
add al, 0xAB
or al, 0xAB
sbb al, 0xAB
sub al, 0xAB
cmp al, 0xAB
push byte 0x00
jo short 0x12
jno short 0x12
jb short 0x12
jnb short 0x12
je short 0x12
jne short 0x12
jbe short 0x12
jnbe short 0x12
js short 0x12
jns short 0x12
jp short 0x12
jnp short 0x12
jl short 0x12
jge short 0x12
jle short 0x12
jg short 0x12
;mov al, [0xAB] ;nasm makes it an dword offset, not byte offset
;mov [0xAB], al ;nasm makes it an dword offset, not byte offset
test al, 0xFF
mov al, 0xFF
mov cl, 0xFF
mov dl, 0xFF
mov bl, 0xFF
mov ah, 0xFF
mov ch, 0xFF
mov dh, 0xFF
mov bh, 0xFF
int 0x20
aam 0xFF
aad 0xFF
loopne 0x20
loope 0x20
loop 0x20
jecxz 0x20
in al, 0xFF
out 0xFF, al
jmp short 0x20
;2 byte immediates
retn 0xABCD
retf 0xABCD
;4 byte immediates
add eax, dword 0xABCDABCD
adc eax, dword 0xABCDABCD
and eax, dword 0xABCDABCD
xor eax, dword 0xABCDABCD
or eax, dword 0xABCDABCD
sbb eax, dword 0xABCDABCD
sub eax, dword 0xABCDABCD
cmp eax, dword 0xABCDABCD
push dword 0xABCDABCD
mov eax, [0xABCDABCD]
mov [0xABCDABCD], eax
test eax, 0xABCDABCD
mov ecx, 0xABCDABCD
mov edx, 0xABCDABCD
mov ebx, 0xABCDABCD
mov esp, 0xABCDABCD
mov ebp, 0xABCDABCD
mov esi, 0xABCDABCD
mov edi, 0xABCDABCD
call near 0xABCDABCD
jmp near 0xABCDABCD
